/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.mavenagi.api.resources.conversation.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.mavenagi.api.core.ObjectMappers;
import com.mavenagi.api.resources.commons.types.EntityIdBase;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AskRequest.Builder.class)
public final class AskRequest {
    private final EntityIdBase conversationMessageId;

    private final EntityIdBase userId;

    private final String text;

    private final Map<String, Object> additionalProperties;

    private AskRequest(
            EntityIdBase conversationMessageId,
            EntityIdBase userId,
            String text,
            Map<String, Object> additionalProperties) {
        this.conversationMessageId = conversationMessageId;
        this.userId = userId;
        this.text = text;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Externally supplied ID to uniquely identify this message within the conversation
     */
    @JsonProperty("conversationMessageId")
    public EntityIdBase getConversationMessageId() {
        return conversationMessageId;
    }

    /**
     * @return Externally supplied ID to uniquely identify the user that created this message
     */
    @JsonProperty("userId")
    public EntityIdBase getUserId() {
        return userId;
    }

    /**
     * @return The text of the message
     */
    @JsonProperty("text")
    public String getText() {
        return text;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AskRequest && equalTo((AskRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AskRequest other) {
        return conversationMessageId.equals(other.conversationMessageId)
                && userId.equals(other.userId)
                && text.equals(other.text);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.conversationMessageId, this.userId, this.text);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ConversationMessageIdStage builder() {
        return new Builder();
    }

    public interface ConversationMessageIdStage {
        UserIdStage conversationMessageId(@NotNull EntityIdBase conversationMessageId);

        Builder from(AskRequest other);
    }

    public interface UserIdStage {
        TextStage userId(@NotNull EntityIdBase userId);
    }

    public interface TextStage {
        _FinalStage text(@NotNull String text);
    }

    public interface _FinalStage {
        AskRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ConversationMessageIdStage, UserIdStage, TextStage, _FinalStage {
        private EntityIdBase conversationMessageId;

        private EntityIdBase userId;

        private String text;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AskRequest other) {
            conversationMessageId(other.getConversationMessageId());
            userId(other.getUserId());
            text(other.getText());
            return this;
        }

        /**
         * <p>Externally supplied ID to uniquely identify this message within the conversation</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("conversationMessageId")
        public UserIdStage conversationMessageId(@NotNull EntityIdBase conversationMessageId) {
            this.conversationMessageId =
                    Objects.requireNonNull(conversationMessageId, "conversationMessageId must not be null");
            return this;
        }

        /**
         * <p>Externally supplied ID to uniquely identify the user that created this message</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("userId")
        public TextStage userId(@NotNull EntityIdBase userId) {
            this.userId = Objects.requireNonNull(userId, "userId must not be null");
            return this;
        }

        /**
         * <p>The text of the message</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("text")
        public _FinalStage text(@NotNull String text) {
            this.text = Objects.requireNonNull(text, "text must not be null");
            return this;
        }

        @java.lang.Override
        public AskRequest build() {
            return new AskRequest(conversationMessageId, userId, text, additionalProperties);
        }
    }
}
